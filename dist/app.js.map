{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app/App.jsx","webpack:///./src/js/app/api/api.js","webpack:///./src/js/app/api/instance.js","webpack:///./src/js/app/common/categoriesName.js","webpack:///./src/js/app/common/item.js","webpack:///./src/js/app/common/makeObjectFromArray.js","webpack:///./src/js/app/common/sortOptionInItem.js","webpack:///./src/js/app/components/Creator/ItemCard/index.jsx","webpack:///./src/js/app/components/Creator/ItemGroup/index.jsx","webpack:///./src/js/app/components/Creator/NewItemCard/index.jsx","webpack:///./src/js/app/components/Creator/NewItemGroup/index.jsx","webpack:///./src/js/app/components/Creator/index.jsx","webpack:///./src/js/app/components/Home.jsx","webpack:///./src/js/app/components/Login/index.jsx","webpack:///./src/js/app/components/Orders/index.jsx","webpack:///./src/js/app/components/common/Input/index.jsx","webpack:///./src/js/app/components/common/NavigateCategory/index.jsx","webpack:///./src/js/app/components/common/NavigatePages/index.jsx","webpack:///./src/js/app/hooks/useRedirectToCreator.jsx","webpack:///./src/js/app/hooks/useRedirectToHome.jsx","webpack:///./src/js/app/index.jsx","webpack:///./src/js/app/redux/app-reducer.js","webpack:///./src/js/app/redux/auth-reducer.js","webpack:///./src/js/app/redux/store.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","withRouter","props","isAuth","useSelector","state","auth","className","watchOnlyPathname","exact","path","render","addToken","options","localStorage","getItem","authAPI","login","password","Instance","post","token","appAPI","idCategory","categoryId","headers","id","delete","item","imgFile","isNew","formData","FormData","url","append","Blob","JSON","stringify","type","undefined","Axios","baseURL","withCredentials","idsCategoryByName","Map","namesCategoryById","nameMenu","groupId","img","structure","weight","price","labels","hit","new","makeObjectFromArray","array","isNullGoods","reduce","acc","goods","map","product","sort","a","b","sortOptionInItem","connect","saveItem","deleteItem","idGroup","idItem","Math","floor","random","Date","React","createRef","isNeedSave","setIsNeedSave","useState","imageItem","setImageItem","imageFile","setImageFile","nameItem","setNameItem","structureItem","setStructureItem","weightClassic","setWeightClassic","priceClassic","setPriceClassic","scorchedPrice","setScorchedPrice","scorchedWeight","setScorchedWeight","hotPrice","setHotPrice","hotWeight","setHotWeight","bigPrice","setBigPrice","bigWeight","setBigWeight","onClickSave","useCallback","toString","match","createItem","onClickDelete","onBlur","event","onChangeImage","file","current","files","reader","FileReader","onload","target","readAsDataURL","onChange","nameInput","newValue","onClick","style","htmlFor","ref","accept","placeholder","deleteGroup","renameGroup","title","items","localItems","nameGroupValue","setNameGroupValue","onClickDeleteGroup","onClickRenameGroup","itemLast","itemNext","addNewItem","onAddNewItem","addNewGroup","newNameGroup","setNewNameGroup","handlerChange","handlerClick","selectGroupsInCategory","createSelector","app","categories","currentNamePage","category","groups","values","groupFirst","groupNext","selectGroupsInCategoryLocal","localCategories","compose","getAllGroups","setCurrentPage","isRedirect","useRedirectToHome","isHasNameMenu","useRedirectToCreator","params","setIdCategory","idsCategory","isLoadedAllGroups","setIsLoadedAllGroups","groupsLocal","useEffect","urlNameMenu","document","group","getAuth","isInitialized","initialized","lastPage","useLastLocation","to","pathname","inputData","setInputData","getInputValue","onSubmit","preventDefault","label","src","alt","OrdersPage","Input","onChangeInput","setValue","propTypes","PropTypes","string","NavigateCategory","activeClassName","NavigatePages","ReactDOM","store","querySelector","actionTypes","initialState","isLoaded","appReducer","action","keys","namePage","newCategory","localCategory","_groups","filter","newName","_addGroupsToCategoryLocal","_changeCategory","_changeCategoryLocal","_updateGroup","dispatch","_setCurrentPage","async","ok","Error","_categories","obj","_addAllCategory","_addAllCategoryLocal","objectGroup","error","console","info","groupEnd","getGroup","log","getGroups","newCategoryLocal","_renameGroup","_addNewItem","_updateGroupLocal","authReducer","status","_setAuth","_initialized","myToken","setItem","reducers","combineReducers","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunk"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([5,\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, {useEffect} from \"react\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport LoginPage from \"@js/app/components/Login\";\r\nimport Home from \"@js/app/components/Home\";\r\nimport CreatorPage from \"@js/app/components/Creator\";\r\nimport OrdersPage from \"@js/app/components/Orders\";\r\nimport NavigatePages from \"@js/app/components/common/NavigatePages\";\r\n\r\nconst App = (props) => {\r\n\r\n    const isAuth = useSelector(state => state.auth.auth);\r\n\r\n    return (\r\n        <div className={'content'}>\r\n            {\r\n                isAuth &&\r\n                <NavigatePages />\r\n            }\r\n            <LastLocationProvider watchOnlyPathname>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path={'/admin'}\r\n                        render={ () => <Home /> }\r\n                    />\r\n                    <Route\r\n                        path={'/admin/creator/:nameMenu?'}\r\n                        render={ () => <CreatorPage /> }\r\n                    />\r\n                    <Route\r\n                        path={'/admin/orders'}\r\n                        render={ () => <OrdersPage /> }\r\n                    />\r\n                    <Route\r\n                        path={'/admin/login'}\r\n                        render={ () => <LoginPage /> }\r\n                    />\r\n                    <Route\r\n                        render={ () => <Home /> }\r\n                    />\r\n                </Switch>\r\n            </LastLocationProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(App);","import Instance from './instance'\r\n\r\n/**\r\n * Добавляет токен к заголовкам\r\n *\r\n * @param options - Объект заголовков запроса\r\n * @returns {{Authorization: string}}\r\n */\r\nfunction addToken(options={}) {\r\n    return {\r\n        ...options,\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    };\r\n}\r\n\r\n// API авторизации\r\nexport const authAPI = {\r\n\r\n    /**\r\n     * Логин\r\n     *\r\n     * @param login\r\n     * @param password\r\n     * @returns {Promise<AxiosResponse<T>>}\r\n     */\r\n    async login(login, password) {\r\n        return await Instance.post('/v1/login',{login, password});\r\n    },\r\n\r\n    /**\r\n     * Проверка авторизации\r\n     *\r\n     * @param token\r\n     * @returns {Promise<AxiosResponse<T>>}\r\n     */\r\n    async getAuth(token) {\r\n        return await Instance.post('/v1/auth', {token});\r\n    },\r\n\r\n};\r\n\r\n// API работы в приложении\r\nexport const appAPI = {\r\n\r\n    /**\r\n     * Добавление группы\r\n     *\r\n     * @param idCategory - ID категории\r\n     * @param name - Имя группы\r\n     * @returns {Promise<{data: {ok: boolean}}>}\r\n     */\r\n    async addNewGroup(idCategory, name) {\r\n        return await Instance.post('/v1/group/create',{\r\n                categoryId: idCategory,\r\n                name\r\n            }, {\r\n            headers: addToken()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Переименовать группу\r\n     *\r\n     * @param id - ID Группы\r\n     * @param name - Новое имя\r\n     * @returns {Promise<AxiosResponse<T>>}\r\n     */\r\n    async renameGroup(id, name) {\r\n        return Instance.post('/v1/group/update', {id, name}, {\r\n            headers: addToken()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Удаление группы\r\n     *\r\n     * @param id - ID группы\r\n     * @returns {Promise<{data: {ok: boolean}}>}\r\n     */\r\n    async deleteGroup(id) {\r\n        return await Instance.delete('/v1/group/delete', {\r\n            headers: addToken(),\r\n            data: {id},\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Выполняет запрос на получение всех категорий\r\n     *\r\n     * @returns {Promise<AxiosResponse<T>>}\r\n     */\r\n    async getAllGroups() {\r\n        return await Instance.get('/v1/categories', {\r\n            headers: addToken()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Получить группы в категории\r\n     *\r\n     * @param id - ID Категории\r\n     * @returns {Promise<void>}\r\n     */\r\n    async getGroups(id) {\r\n        return await Instance.post('/v1/category', {id}, {\r\n            headers: addToken()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Получить определенную группу\r\n     * по ID\r\n     *\r\n     * @param id\r\n     * @returns {Promise<AxiosResponse<T>>}\r\n     */\r\n    async getGroup(id) {\r\n      return await Instance.post('/v1/group', {id}, {\r\n          headers: addToken(),\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Создание/обновление товара\r\n     *\r\n     * @param item - Объект товара\r\n     * @param imgFile - Файл картинки\r\n     * @param isNew - Новый ли файл\r\n     * @returns {Promise<void>}\r\n     */\r\n    async saveItem(item, imgFile, isNew) {\r\n        const\r\n            formData = new FormData(),\r\n            url = isNew ? '/v1/item/create' : '/v1/item/update';\r\n\r\n        formData.append('file', imgFile);\r\n        formData.append('properties', new Blob([JSON.stringify(item)], {\r\n            type: \"application/json\"\r\n        }));\r\n\r\n        return await Instance.post(url, formData, {\r\n            headers: addToken(),\r\n            'Content-Type': undefined\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Удалить товар\r\n     *\r\n     * @param id - ID товара\r\n     * @returns {Promise<void>}\r\n     */\r\n    async deleteItem(id) {\r\n        return await Instance.delete('/v1/item/delete', {\r\n            headers: addToken(),\r\n            data: {id},\r\n        });\r\n    },\r\n\r\n};","import Axios from 'axios';\r\n\r\nconst Instance = Axios.create({\r\n    baseURL: '/api',\r\n    withCredentials: false,\r\n});\r\n\r\nexport default Instance;","\r\nexport const idsCategoryByName = new Map([\r\n    ['rolls', 1],\r\n    ['sets', 2],\r\n    ['rolls_hot', 3],\r\n    ['salad', 4],\r\n    ['hot_meat', 5],\r\n    ['sup', 6],\r\n    ['fastfood', 7],\r\n    ['beverages', 8],\r\n    ['desert', 9],\r\n    ['child', 10],\r\n    ['pizza', 11]\r\n]);\r\n\r\nexport const namesCategoryById = new Map([\r\n    [1, 'rolls'],\r\n    [2, 'sets'],\r\n    [3, 'rolls_hot'],\r\n    [4, 'salad'],\r\n    [5, 'hot_meat'],\r\n    [6, 'sup'],\r\n    [7, 'fastfood'],\r\n    [8, 'beverages'],\r\n    [9, 'desert'],\r\n    [10, 'child'],\r\n    [11, 'pizza']\r\n]);\r\n\r\nexport const nameMenu = new Map([\r\n    ['rolls', 'Суши и роллы'],\r\n    ['sets', 'Сеты'],\r\n    ['rolls_hot', 'Горячие роллы'],\r\n    ['salad', 'Салаты'],\r\n    ['hot_meat', 'Горячие блюда'],\r\n    ['sup', 'Супы'],\r\n    ['fastfood', 'Фаст-фуд'],\r\n    ['child', 'Детское меню'],\r\n    ['beverages', 'Напитки'],\r\n    ['desert', 'Десерты'],\r\n    ['pizza', 'Пицца'],\r\n]);","/**\r\n * Объект товара\r\n *\r\n * @param groupId\r\n * @param id\r\n * @param img\r\n * @param name\r\n * @param structure\r\n * @param weight\r\n * @param price\r\n * @param labels\r\n * @param options\r\n * @returns {{img: *, price: *, name: *, options: *, weight: *, id: *, structure: *, labels: *}}\r\n */\r\nexport function item(\r\n    groupId,\r\n    id=0,\r\n    img='/img/logo.png',\r\n    name='',\r\n    structure='',\r\n    weight='',\r\n    price='',\r\n    labels={hit: false, new: false},\r\n    options=[\r\n        {\r\n            name: \"scorched\",\r\n            price: \"\",\r\n            weight: \"\"\r\n        },\r\n        {\r\n            name: \"hot\",\r\n            price: \"\",\r\n            weight: \"\"\r\n        },\r\n        {\r\n            name: \"big\",\r\n            price: \"\",\r\n            weight: \"\"\r\n        },\r\n    ]\r\n) {\r\n\r\n    return {\r\n        groupId,\r\n        id,\r\n        img,\r\n        name,\r\n        structure,\r\n        options,\r\n        labels,\r\n        weight,\r\n        price\r\n    }\r\n}","/**\r\n * Создает объект на базе массива\r\n * (Ключем для объектов является\r\n * id внутреннего объекта)\r\n *\r\n * @param {Array} array - Массив объектов\r\n * @param isNullGoods - Без товарова\r\n * @returns {*} - Объект на базе массива\r\n */\r\nexport function makeObjectFromArray(array, isNullGoods=false) {\r\n    return array.reduce((acc, item) => ({\r\n        ...acc,\r\n        [item.id]: {\r\n            ...item,\r\n            goods: !isNullGoods && item.goods.map(product => {\r\n                const\r\n                    options = [...product.options];\r\n                options.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return -1;\r\n                    } else if (a.name < b.name) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n                return ({\r\n                    ...product,\r\n                    options\r\n                })\r\n            })\r\n        }\r\n    }), {});\r\n}","/**\r\n * Сортировка опций в айтеме\r\n *\r\n * @param item\r\n * @returns {{options: *}}\r\n */\r\n\r\nfunction sortOptionInItem(item) {\r\n    return {\r\n        ...item,\r\n        options: item.options.sort(function (a, b) {\r\n            if (a.name > b.name) {\r\n                return -1;\r\n            } else if (a.name < b.name) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n}\r\n\r\nexport default sortOptionInItem;","import React, {useState, useCallback} from \"react\";\r\nimport {item as createItem} from \"@js/app/common/item\";\r\nimport {connect} from \"react-redux\";\r\nimport {saveItem, deleteItem} from \"@js/app/redux/app-reducer\";\r\n\r\n/**\r\n * Карточка товара\r\n *\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst ItemCard = ({idCategory, idGroup, idItem,\r\n                      img='', name='',\r\n                      structure='',\r\n                      options=[], labels={},\r\n                      weight='', price='',\r\n                      saveItem, deleteItem}) => {\r\n\r\n    const\r\n        id = idItem || Math.floor(Math.random() * new Date);\r\n    const\r\n        imgFile = React.createRef();\r\n\r\n    const\r\n        [isNeedSave, setIsNeedSave] = useState(idItem === 0);\r\n\r\n    // Основные поля\r\n    const\r\n        [imageItem, setImageItem] = useState(img),\r\n        [imageFile, setImageFile] = useState(null),\r\n        [nameItem, setNameItem] = useState(name),\r\n        [structureItem, setStructureItem] = useState(structure),\r\n        [weightClassic, setWeightClassic] = useState(weight),\r\n        [priceClassic, setPriceClassic] = useState(price);\r\n\r\n    // Опции\r\n    const\r\n        [scorchedPrice, setScorchedPrice] = useState(options[0] ? options[0].price : ''),\r\n        [scorchedWeight, setScorchedWeight] = useState(options[0] ? options[0].weight : ''),\r\n        [hotPrice, setHotPrice] = useState(options[1] ? options[1].price : ''),\r\n        [hotWeight, setHotWeight] = useState(options[1] ? options[1].weight : ''),\r\n        [bigPrice, setBigPrice] = useState(options[2] ? options[2].price : ''),\r\n        [bigWeight, setBigWeight] = useState(options[2] ? options[2].weight : '');\r\n\r\n    /** Сохранить **/\r\n    const\r\n        onClickSave = useCallback(() => {\r\n            const\r\n                isNew = !!idItem.toString().match(/new/);\r\n            setIsNeedSave(false);\r\n            saveItem(createItem(idGroup,isNew ? 0 : idItem,'',\r\n                nameItem, structureItem, weightClassic, priceClassic,\r\n                {\r\n                    hit: false,\r\n                    new: false\r\n                },\r\n                [\r\n                    {\r\n                        name: \"scorched\",\r\n                        price: scorchedPrice,\r\n                        weight: scorchedWeight\r\n                    },\r\n                    {\r\n                        name: \"hot\",\r\n                        price: hotPrice,\r\n                        weight: hotWeight\r\n                    },\r\n                    {\r\n                        name: \"big\",\r\n                        price: bigPrice,\r\n                        weight: bigWeight\r\n                    },]\r\n                ),\r\n                imageFile, isNew, idCategory\r\n            );\r\n            if (isNew) {\r\n                deleteItem(idCategory, idGroup, idItem, true);\r\n            }\r\n        }, [idCategory, idGroup, idItem, nameItem, structureItem,\r\n            weightClassic, priceClassic, bigPrice, bigWeight, hotPrice, hotWeight,\r\n            scorchedPrice, scorchedWeight, imageFile]);\r\n\r\n    /** Удалить **/\r\n    const\r\n        onClickDelete = useCallback(() => {\r\n            deleteItem(idCategory, idGroup, idItem, !!idItem.toString().match(/new/),);\r\n        }, [idCategory, idGroup, idItem]);\r\n\r\n    /** Замена на Input **/\r\n    const\r\n        onBlur = useCallback(event => {\r\n            setIsNeedSave(true);\r\n        });\r\n\r\n    /** Обработка изменения value в Input **/\r\n    const\r\n        onChangeImage = useCallback(() => {\r\n            // Обработка добавления картинки\r\n            const\r\n                file = imgFile.current.files[0];\r\n            if (!file.type.match('image.*')) {\r\n                return false;\r\n            }\r\n            setImageFile(file);\r\n            const reader = new FileReader();\r\n            reader.onload = (function() {\r\n                return function(event) {\r\n                    setImageItem(event.target.result);\r\n                };\r\n            })();\r\n            reader.readAsDataURL(file);\r\n            setIsNeedSave(true);\r\n        }),\r\n        onChange = useCallback(event => {\r\n            const\r\n                nameInput = event.target.name,\r\n                newValue = event.target.value;\r\n\r\n            switch (nameInput) {\r\n                case 'name':\r\n                    setNameItem(newValue);\r\n                    break;\r\n\r\n                case 'structure':\r\n                    setStructureItem(newValue);\r\n                    break;\r\n\r\n                case 'weight':\r\n                    setWeightClassic(newValue);\r\n                    break;\r\n\r\n                case 'price':\r\n                    setPriceClassic(newValue);\r\n                    break;\r\n\r\n                case 'scorched-price':\r\n                    setScorchedPrice(newValue);\r\n                    break;\r\n\r\n                case 'scorched-weight':\r\n                    setScorchedWeight(newValue);\r\n                    break;\r\n\r\n                case 'hot-price':\r\n                    setHotPrice(newValue);\r\n                    break;\r\n\r\n                case 'hot-weight':\r\n                    setHotWeight(newValue);\r\n                    break;\r\n\r\n                case 'big-price':\r\n                    setBigPrice(newValue);\r\n                    break;\r\n\r\n                case 'big-weight':\r\n                    setBigWeight(newValue);\r\n                    break;\r\n            }\r\n        });\r\n\r\n    return (\r\n        <div className={'admin-card admin-card--margin-bottom'}>\r\n            <div className={'admin-card__main admin-card--styles'}>\r\n                <div className={'admin-card__wrapper'}>\r\n                    <span className={'admin-card__wrapper-id'}>id:&nbsp;{idItem}</span>\r\n                    <button\r\n                        className={'admin-card__wrapper-close'}\r\n                        onClick={onClickDelete}\r\n                    ><i/><i/></button>\r\n                    <div className={'admin-card__wrapper-inner'}>\r\n                        <div className={'admin-card__img'} style={{'backgroundImage': `url(\"${imageItem}\")`}}>\r\n                            <label\r\n                                htmlFor={`${id}`}\r\n                                className={'admin-card__img-label'}\r\n                            />\r\n                            <input\r\n                                type={'file'}\r\n                                id={`${id}`}\r\n                                ref={imgFile}\r\n                                accept={'image/*'}\r\n                                className={'admin-card__img-input'}\r\n                                onChange={onChangeImage}\r\n                            />\r\n                        </div>\r\n                        <textarea\r\n                            name={'name'}\r\n                            className={`admin-card__name`}\r\n                            placeholder={'Название блюда...'}\r\n                            value={nameItem}\r\n                            onChange={onChange}\r\n                            onBlur={onBlur}\r\n                        />\r\n                        <textarea\r\n                            name={'structure'}\r\n                            className={`admin-card__structure`}\r\n                            placeholder={'Состав блюда...'}\r\n                            onChange={onChange}\r\n                            onBlur={onBlur}\r\n                            value={structureItem}\r\n                        />\r\n                        <div className={'admin-card__options'}>\r\n                            <div className={'admin-card__option'}>\r\n                                <input\r\n                                    name={'scorched-price'}\r\n                                    type={'number'}\r\n                                    placeholder={'Цена...'}\r\n                                    className={'admin-card__option-input'}\r\n                                    value={scorchedPrice}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <input\r\n                                    name={'scorched-weight'}\r\n                                    type={'text'}\r\n                                    placeholder={'Вес...'}\r\n                                    className={'admin-card__option-input'}\r\n                                    value={scorchedWeight}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <p className=\"admin-card__option-description\">опаленный</p>\r\n                            </div>\r\n                            <div className={'admin-card__option'}>\r\n                                <input\r\n                                    name={'hot-price'}\r\n                                    type={'number'}\r\n                                    placeholder={'Цена...'}\r\n                                    className={'admin-card__option-input'}\r\n                                    value={hotPrice}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <input\r\n                                    name={'hot-weight'}\r\n                                    type={'text'}\r\n                                    placeholder={'Вес...'}\r\n                                    className={'admin-card__option-input'}\r\n                                    value={hotWeight}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <p className=\"admin-card__option-description\">«хот»</p>\r\n                            </div>\r\n                            <div className={'admin-card__option'}>\r\n                                <input\r\n                                    name={'big-price'}\r\n                                    type={'number'}\r\n                                    placeholder={'Цена...'}\r\n                                    className={'admin-card__option-input'}\r\n                                    value={bigPrice}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <input\r\n                                    name={'big-weight'}\r\n                                    type={'text'}\r\n                                    placeholder={'Вес...'}\r\n                                    className={'admin-card__option-input'}\r\n                                    value={bigWeight}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                />\r\n                                <p className=\"admin-card__option-description\">«биг»</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'admin-card__wrapper-inner'}>\r\n                        <input\r\n                            name={'weight'}\r\n                            type={'text'}\r\n                            className={`admin-card__weight`}\r\n                            placeholder={'Вес...'}\r\n                            value={weightClassic}\r\n                            onChange={onChange}\r\n                            onBlur={onBlur}\r\n                        /><span className={'admin-card__weight'}>гр.</span>\r\n                        <input\r\n                            name={'price'}\r\n                            type={'number'}\r\n                            className={`admin-card__price`}\r\n                            placeholder={'Цена...'}\r\n                            value={priceClassic}\r\n                            onChange={onChange}\r\n                            onBlur={onBlur}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`admin-card__save-wrapper ${isNeedSave ? 'admin-card__save-wrapper--show' : '' }`}>\r\n                <button\r\n                    className={'admin-card__save-wrapper-button'}\r\n                    onClick={onClickSave}\r\n                >\r\n                    Сохранить\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {saveItem, deleteItem})(ItemCard);","import React, {useState, useCallback} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {deleteGroup, renameGroup} from \"@js/app/redux/app-reducer\";\r\n\r\nimport ItemCard from \"@js/app/components/Creator/ItemCard\";\r\nimport NewItemCard from \"@js/app/components/Creator/NewItemCard\";\r\n\r\nconst ItemGroup = ({ title='', id, idCategory, items, localItems, deleteGroup, renameGroup }) => {\r\n\r\n    // Название группы\r\n    const [nameGroupValue, setNameGroupValue] = useState(title);\r\n\r\n    const\r\n        onChange = useCallback(event => {\r\n            // Изменение названия группы\r\n            setNameGroupValue(event.target.value);\r\n        }),\r\n        onClickDeleteGroup = useCallback(() => {\r\n            // Удалить группу\r\n            deleteGroup(idCategory, id);\r\n        }, [idCategory, id]),\r\n        onClickRenameGroup = useCallback(() => {\r\n            // Переименовать группу\r\n            renameGroup(idCategory, id, nameGroupValue);\r\n        }, [idCategory, id, nameGroupValue]);\r\n\r\n    return (\r\n        <div className='admin-item-group admin-item-group--styles'>\r\n            <div className='admin-item-group__header'>\r\n                <input\r\n                    className={'admin-item-group__input'}\r\n                    placeholder={'Название группы...'}\r\n                    value={nameGroupValue}\r\n                    onChange={onChange}\r\n                />\r\n                <button\r\n                    className='btn btn--styles btn--stroke btn--min admin-item-group__header-btn admin-item-group__header-btn--margin-right'\r\n                    onClick={onClickDeleteGroup}\r\n                >Удалить группу</button>\r\n                <button\r\n                    className='btn btn--styles btn--stroke btn--min admin-item-group__header-btn'\r\n                    onClick={onClickRenameGroup}\r\n                >Переименовать</button>\r\n                <span className={'admin-item-group__id-group'}>id:&nbsp;{id}</span>\r\n            </div>\r\n            <div className='admin-item-group__wrapper'>\r\n                {\r\n                    items &&\r\n                    items\r\n                        .sort((itemLast, itemNext) => itemLast.id - itemNext.id)\r\n                        .map(item => (\r\n                        <ItemCard\r\n                            key={item.id || Math.floor(Math.random() * new Date())}\r\n                            idCategory={idCategory}\r\n                            idGroup={id}\r\n                            idItem={item.id}\r\n                            img={item.img}\r\n                            name={item.name}\r\n                            structure={item.structure}\r\n                            options={item.options}\r\n                            labels={item.labels}\r\n                            weight={item.weight}\r\n                            price={item.price}\r\n                        />\r\n                    ))\r\n                }\r\n                {\r\n                    localItems &&\r\n                    localItems.map(item => (\r\n                        <ItemCard\r\n                            key={item.id || Math.floor(Math.random() * new Date())}\r\n                            idCategory={idCategory}\r\n                            idGroup={id}\r\n                            idItem={item.id}\r\n                            img={item.img}\r\n                            name={item.name}\r\n                            structure={item.structure}\r\n                            options={item.options}\r\n                            labels={item.labels}\r\n                            weight={item.weight}\r\n                            price={item.price}\r\n                        />\r\n                    ))\r\n                }\r\n                <NewItemCard\r\n                    idCategory={idCategory}\r\n                    idGroup={id}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, ({deleteGroup, renameGroup}))(ItemGroup);","import React, { useCallback } from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {addNewItem} from \"@js/app/redux/app-reducer\";\r\n\r\n/**\r\n * Добавить новый продукт\r\n *\r\n * @param idCategory\r\n * @param idGroup\r\n * @param addNewItem\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst NewItemCard = ({idCategory, idGroup, addNewItem}) => {\r\n\r\n    const\r\n        onAddNewItem = useCallback(() => {\r\n            // Добавить новый продукт\r\n            addNewItem(idCategory, idGroup);\r\n        }, [idCategory, idGroup]);\r\n\r\n    return (\r\n        <div\r\n            className={'admin-card admin-card--styles admin-card--margin-bottom'}\r\n            onClick={onAddNewItem}\r\n        >\r\n            <div className={'admin-card__new'}>\r\n                Добавить новый продукт\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {addNewItem})(NewItemCard);","import React, {useState, useCallback} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {addNewGroup} from '@js/app/redux/app-reducer';\r\n\r\n/**\r\n * Добавление новой подгруппы\r\n *\r\n * @param idCategory\r\n * @param nameGroup\r\n * @param addNewGroup\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst NewItemGroup = ({ idCategory, addNewGroup }) => {\r\n\r\n    const\r\n        [newNameGroup, setNewNameGroup] = useState('');\r\n\r\n    // Обновляет введеное имя в стейте\r\n    const handlerChange = useCallback(event => {\r\n        setNewNameGroup(event.target.value);\r\n    }, []);\r\n\r\n\r\n    // Отправить запрос на добавление группы\r\n    const handlerClick = useCallback(event => {\r\n        addNewGroup(idCategory, newNameGroup);\r\n        setNewNameGroup('');\r\n    }, [idCategory, newNameGroup]);\r\n\r\n    return (\r\n        <div className='admin-item-group admin-item-group--styles admin-item-group--align-items-center'>\r\n            <input\r\n                className={'admin-item-group__input'}\r\n                placeholder={'Название группы...'}\r\n                onChange={handlerChange}\r\n                value={newNameGroup}\r\n            />\r\n            <button \r\n                className='btn btn--styles btn--stroke btn--min admin-item-group__input-btn'\r\n                onClick={handlerClick}\r\n            >Добавить группу</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {addNewGroup})(NewItemGroup);","import React, {useEffect, useState} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport { createSelector } from 'reselect'\r\n\r\nimport useRedirectToHome from \"@js/app/hooks/useRedirectToHome\";\r\nimport {getAllGroups, setCurrentPage} from \"@js/app/redux/app-reducer\";\r\nimport {idsCategoryByName as idsCategory, nameMenu} from \"@js/app/common/categoriesName\";\r\n\r\nimport NavigateCategory from \"@js/app/components/common/NavigateCategory\";\r\nimport ItemGroup from \"@js/app/components/Creator/ItemGroup\";\r\nimport NewItemGroup from \"@js/app/components/Creator/NewItemGroup\";\r\nimport useRedirectToCreator from \"@js/app/hooks/useRedirectToCreator\";\r\n\r\n// Получает группы в категории\r\nconst selectGroupsInCategory = createSelector(\r\n    state => state.app.categories,\r\n    state => state.app.currentNamePage,\r\n    (categories, currentNamePage) => {\r\n        const\r\n            category = categories && categories[currentNamePage],\r\n            groups = category && category.groups && Object.values(category.groups);\r\n        return groups && groups.sort((groupFirst, groupNext) => groupFirst.id - groupNext.id);\r\n    }\r\n);\r\n\r\n// Получает локальные группы в категории\r\nconst selectGroupsInCategoryLocal = createSelector(\r\n    state => state.app.localCategories,\r\n    state => state.app.currentNamePage,\r\n    (localCategories, currentNamePage) => {\r\n        const\r\n            category = localCategories && localCategories[currentNamePage],\r\n            groups = category && category.groups && Object.values(category.groups);\r\n        return groups && groups.sort((groupFirst, groupNext) => groupFirst.id - groupNext.id);\r\n    }\r\n);\r\n\r\nconst CreatorPage = ({ match, getAllGroups, setCurrentPage }) => {\r\n\r\n    const isRedirect = useRedirectToHome();\r\n    const isHasNameMenu = useRedirectToCreator(match.params.nameMenu);\r\n\r\n    const\r\n        [idCategory, setIdCategory] = useState(idsCategory.get(match.params.nameMenu)),\r\n        [isLoadedAllGroups, setIsLoadedAllGroups] = useState(false);\r\n\r\n    const\r\n        groups = useSelector(selectGroupsInCategory),\r\n        groupsLocal = useSelector(selectGroupsInCategoryLocal);\r\n\r\n    // Сменить Title\r\n    useEffect(() => {\r\n        const\r\n            urlNameMenu = match.params.nameMenu;\r\n        document.title = `${urlNameMenu ? `${nameMenu.get(urlNameMenu)} | ` : ''}Редактор меню | Админ-панель | Суши-бар \"Токио\"`;\r\n    });\r\n\r\n    // Запомнить id текущей категории\r\n    useEffect(() => {\r\n        setCurrentPage(match.params.nameMenu);\r\n        setIdCategory(idsCategory.get(match.params.nameMenu));\r\n    }, [match]);\r\n\r\n    // Загрузить все категории\r\n    // если они еще не были загружены\r\n    useEffect(() => {\r\n        if (!isLoadedAllGroups) {\r\n            getAllGroups();\r\n            setIsLoadedAllGroups(true);\r\n        }\r\n    }, [isLoadedAllGroups]);\r\n\r\n    return (\r\n        isRedirect ||\r\n            isHasNameMenu ||\r\n                <div className='admin-page admin-page--styles'>\r\n                    <h1 className='h1'>Редактор меню</h1>\r\n                    <NavigateCategory />\r\n                    {\r\n                        groups &&\r\n                        groups.map( (group, i) =>\r\n                            <ItemGroup\r\n                                key={group.id}\r\n                                id={group.id}\r\n                                title={group.name}\r\n                                idCategory={idCategory}\r\n                                items={group.goods}\r\n                                localItems={groupsLocal && groupsLocal[i] && groupsLocal[i].goods}\r\n                            />)\r\n                    }\r\n                    <NewItemGroup\r\n                        idCategory={idCategory}\r\n                    />\r\n                </div>\r\n    );\r\n};\r\n\r\nexport default compose(\r\n    connect(null, {getAllGroups, setCurrentPage}),\r\n    withRouter\r\n)(CreatorPage);","import React, {useEffect} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {useLastLocation} from \"react-router-last-location\";\r\n\r\nimport {getAuth} from \"@js/app/redux/auth-reducer\";\r\n\r\nconst Home = ({getAuth}) => {\r\n\r\n    const isAuth = useSelector(state => state.auth.auth);\r\n    const isInitialized = useSelector(state => state.auth.initialized);\r\n    const lastPage = useLastLocation();\r\n\r\n    useEffect(() => {\r\n        getAuth(isInitialized);\r\n    }, [isInitialized]);\r\n\r\n    return (\r\n        isInitialized ?\r\n            isAuth ?\r\n                <Redirect to={lastPage ? lastPage.pathname : '/admin/creator/rolls'} /> :\r\n                <Redirect to={'/admin/login'} />\r\n                : <p>Загрузка...</p>\r\n    );\r\n};\r\n\r\nexport default connect(null, {getAuth})(Home);","import React, {useEffect, useState} from \"react\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport {login} from \"@js/app/redux/auth-reducer\";\r\n\r\nimport Input from \"@js/app/components/common/Input\";\r\n\r\nconst LoginPage = ({ login }) => {\r\n\r\n    const [inputData, setInputData] = useState({login: '', password: ''});\r\n    const isAuth = useSelector(state => state.auth.auth);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Авторизация | Админ-панель | Суши-бар \"Токио\"';\r\n    });\r\n\r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        login(inputData.login, inputData.password);\r\n    }\r\n\r\n    function getInputValue(name, value) {\r\n        setInputData({\r\n            ...inputData,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        isAuth ?\r\n            <Redirect to={'/admin/creator'} /> :\r\n            <div className='login-page'>\r\n                <div className={'login-form login-form--styles'}>\r\n                    <form className={'login-form__wrapper'} onSubmit={onSubmit}>\r\n                        <Input\r\n                            name={'login'}\r\n                            id={'login-form__login'}\r\n                            type={'text'}\r\n                            label={'Логин'}\r\n                            onChange={getInputValue}\r\n                        />\r\n                        <Input\r\n                            name={'password'}\r\n                            id={'login-form__password'}\r\n                            className={'login-form__input'}\r\n                            type={'password'}\r\n                            label={'Пароль'}\r\n                            onChange={getInputValue}\r\n                        />\r\n                        <button\r\n                            className={'btn btn--styles btn--main login-form__btn'}\r\n                            type={'submit'}\r\n                        >\r\n                            <span>Войти</span>\r\n                            <img className=\"btn__icon\" src=\"/img/icons/arrow.svg\" alt=\"\"/>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { login })(LoginPage);","import React, {useEffect} from \"react\";\r\n\r\nimport useRedirectToHome from \"@js/app/hooks/useRedirectToHome\";\r\n\r\nconst OrdersPage = props => {\r\n\r\n    const isRedirect = useRedirectToHome();\r\n\r\n    useEffect(() => {\r\n        document.title = 'Заказы | Админ-панель | Суши-бар \"Токио\"';\r\n    });\r\n\r\n    return (\r\n        isRedirect ||\r\n        <div className='admin-page admin-page--styles'>\r\n            <h1 className={'h1'}>Заказы</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersPage;","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ name='field', type='text', className='', id=(Math.random()*new Date()), label='', onChange: onChangeInput }) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    function onChange(event) {\r\n        setValue(event.target.value);\r\n        onChangeInput(event.target.name, event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={`input input--styles ${className}`}>\r\n            <input\r\n                name={name}\r\n                type={type}\r\n                id={id}\r\n                className={`input__${type}`}\r\n                onChange={onChange}\r\n                value={value}\r\n                placeholder='&nbsp;'\r\n            />\r\n            {\r\n                label !== '' &&\r\n                <label className={'input__label'} htmlFor={id}>{label}</label>\r\n            }\r\n            <div className={'input__border'}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    label: PropTypes.string,\r\n};\r\n\r\nexport default Input;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavigateCategory = props => {\r\n\r\n    return (\r\n        <div className='admin-nav admin-nav--styles admin-nav--min'>\r\n            <NavLink\r\n                exact to={'/admin/creator/rolls'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Суши и роллы</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/sets'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Сеты</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/pizza'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Пицца</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/rolls_hot'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Горячие роллы</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/salad'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Салаты</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/hot_meat'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Горячие блюда</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/sup'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Супы</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/fastfood'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Фаст-фуд</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/child'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Детское меню</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/beverages'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Напитки</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/creator/desert'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Десерты</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavigateCategory;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavigatePages = props => {\r\n\r\n    return (\r\n        <nav className={'admin-nav admin-nav--styles'}>\r\n            <NavLink\r\n                to={'/admin/creator'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Редактор меню</span>\r\n            </NavLink>\r\n            <NavLink\r\n                exact to={'/admin/orders'}\r\n                className={'admin-nav__item'}\r\n                activeClassName={'admin-nav__item--active'}>\r\n                <span>Заказы</span>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavigatePages;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst useRedirectToCreator = nameMenu => {\r\n    if (!nameMenu) return <Redirect to={'/admin/creator/rolls'} />;\r\n    return !nameMenu;\r\n};\r\n\r\nexport default useRedirectToCreator;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useRedirectToHome = props => {\r\n    const isAuth = useSelector(state => state.auth.auth);\r\n    if (!isAuth) return <Redirect to={'/login'} />;\r\n    return !isAuth;\r\n};\r\n\r\nexport default useRedirectToHome;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from \"@js/app/App\";\r\nimport store from \"@js/app/redux/store\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.querySelector('.react-app')\r\n);","/**\r\n *\r\n * Редьюсер приложения\r\n *\r\n*/\r\nimport {appAPI} from \"@js/app/api/api\";\r\nimport {namesCategoryById} from \"@js/app/common/categoriesName\";\r\nimport {item} from \"@js/app/common/item\";\r\nimport {makeObjectFromArray} from \"@js/app/common/makeObjectFromArray\";\r\nimport sortOptionInItem from \"@js/app/common/sortOptionInItem\";\r\n\r\n\r\nconst\r\n    actionTypes = new Map([\r\n        ['addAllCategory', 'app/addAllCategory'],\r\n        ['addAllCategoryLocal', 'app/addAllCategoryLocal'],\r\n        ['addGroupsToCategory', 'app/addGroupsToCategory'],\r\n        ['addGroupsToCategoryLocal', 'app/addGroupsToCategoryLocal'],\r\n        ['setIsLoaded', 'app/setIsLoaded'],\r\n        ['setCurrentNamePage', 'app/setCurrentNamePage'],\r\n        ['changeCategory', 'app/changeCategory'],\r\n        ['changeCategoryLocal', 'app/changeCategoryLocal'],\r\n        ['addNewItem', 'app/addNewItem'],\r\n        ['updateGroup', 'app/updateGroup'],\r\n        ['updateGroupLocal', 'app/updateGroupLocal'],\r\n        ['renameGroup', 'app/renameGroup']\r\n    ]);\r\n\r\nconst initialState = {\r\n    currentNamePage: 'rolls',\r\n    categories: null,\r\n    isLoaded: false,\r\n    localCategories: null,\r\n};\r\n\r\n\r\n// Reducer\r\n\r\nconst appReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.get('addAllCategory'):\r\n            return {\r\n                ...state,\r\n                categories: action.categories\r\n            };\r\n\r\n        case actionTypes.get('addAllCategoryLocal'):\r\n            return {\r\n                ...state,\r\n                localCategories: action.categories\r\n            };\r\n\r\n        case actionTypes.get('addGroupsToCategory'): {\r\n            const\r\n                category = state.categories[namesCategoryById.get(action.idCategory)];\r\n            return {\r\n                ...state,\r\n                categories: {\r\n                    ...state.categories,\r\n                    [namesCategoryById.get(action.idCategory)]: {\r\n                        ...category,\r\n                        groups: {\r\n                            ...action.groups\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        case actionTypes.get('addGroupsToCategoryLocal'): {\r\n            const\r\n                category = state.localCategories[namesCategoryById.get(action.idCategory)];\r\n            return {\r\n                ...state,\r\n                localCategories: {\r\n                    ...state.localCategories,\r\n                    [namesCategoryById.get(action.idCategory)]: {\r\n                        ...category,\r\n                        groups: Object.keys(action.groups).reduce((acc, key) => {\r\n                            return {\r\n                                ...acc,\r\n                                [key]: {\r\n                                    ...action.groups[key],\r\n                                    goods: []\r\n                                }\r\n                            }\r\n                        }, {})\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        case actionTypes.get('setIsLoaded'):\r\n            return {\r\n                ...state,\r\n                isLoaded: true\r\n            };\r\n\r\n        case actionTypes.get('setCurrentNamePage'):\r\n            return {\r\n                ...state,\r\n                currentNamePage: action.namePage\r\n            };\r\n\r\n        case actionTypes.get('changeCategory'):\r\n            return {\r\n                ...state,\r\n                categories: {\r\n                    ...state.categories,\r\n                    [namesCategoryById.get(action.newCategory.id)]: {\r\n                        ...action.newCategory\r\n                    }\r\n                }\r\n            };\r\n\r\n        case actionTypes.get('changeCategoryLocal'):\r\n            return {\r\n                ...state,\r\n                localCategories: {\r\n                    ...state.localCategories,\r\n                    [namesCategoryById.get(action.newCategory.id)]: {\r\n                        ...action.newCategory\r\n                    }\r\n                }\r\n            };\r\n\r\n        case actionTypes.get('addNewItem'): {\r\n            const\r\n                localCategory = state.localCategories[namesCategoryById.get(action.idCategory)],\r\n                _groups = localCategory.groups || {},\r\n                goods = _groups[action.idGroup] && _groups[action.idGroup].goods || [];\r\n            return {\r\n                ...state,\r\n                localCategories: {\r\n                    ...state.localCategories,\r\n                    [namesCategoryById.get(action.idCategory)]: {\r\n                        ...localCategory,\r\n                        groups: {\r\n                            ..._groups,\r\n                            [action.idGroup]: {\r\n                                ..._groups[action.idGroup],\r\n                                goods: [\r\n                                    ...goods,\r\n                                    item(action.groupId, `new-${Math.floor(Math.random() * new Date())}`)\r\n                                ]\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        case actionTypes.get('updateGroup'): {\r\n            const\r\n                category = state.categories[namesCategoryById.get(action.idCategory)],\r\n                groups = category.groups || {};\r\n            return {\r\n                ...state,\r\n                categories: {\r\n                    ...state.categories,\r\n                    [namesCategoryById.get(action.idCategory)]: {\r\n                        ...category,\r\n                        groups: {\r\n                            ...groups,\r\n                            [action.idGroup]: {\r\n                                ...action.group,\r\n                                goods: action.group.goods.map(item => sortOptionInItem(item))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        case actionTypes.get('updateGroupLocal'):\r\n            const\r\n                category = state.localCategories[namesCategoryById.get(action.idCategory)],\r\n                groups = category.groups || {};\r\n            return {\r\n                ...state,\r\n                localCategories: {\r\n                    ...state.localCategories,\r\n                    [namesCategoryById.get(action.idCategory)]: {\r\n                        ...category,\r\n                        groups: {\r\n                            ...groups,\r\n                            [action.idGroup]: {\r\n                                ...groups[action.idGroup],\r\n                                goods: groups[action.idGroup].goods.filter(item => item.id !== action.idItem)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        case actionTypes.get('renameGroup'): {\r\n            const\r\n                category = state.categories[namesCategoryById.get(action.idCategory)],\r\n                groups = category.groups || {};\r\n            return {\r\n                ...state,\r\n                categories: {\r\n                    ...state.categories,\r\n                    [namesCategoryById.get(action.idCategory)]: {\r\n                        ...category,\r\n                        groups: {\r\n                            ...groups,\r\n                            [action.idGroup]: {\r\n                                ...groups[action.idGroup],\r\n                                name: action.newName\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default appReducer;\r\n\r\n\r\n// Actions\r\nconst _setIsLoaded = () => ({type: actionTypes.get('setIsLoaded')});\r\nconst _addAllCategory = categories => ({type: actionTypes.get('addAllCategory'), categories});\r\nconst _addAllCategoryLocal = categories => ({type: actionTypes.get('addAllCategoryLocal'), categories});\r\nconst _addGroupsToCategory = (idCategory, groups) => ({type: actionTypes.get('addGroupsToCategory'), idCategory, groups});\r\nconst _addGroupsToCategoryLocal = (idCategory, groups) => ({type: actionTypes.get('addGroupsToCategoryLocal'), idCategory, groups});\r\nconst _setCurrentPage = namePage => ({type: actionTypes.get('setCurrentNamePage'), namePage});\r\nconst _changeCategory = newCategory => ({type: actionTypes.get('changeCategory'), newCategory});\r\nconst _changeCategoryLocal = newCategory => ({type: actionTypes.get('changeCategoryLocal'), newCategory});\r\nconst _addNewItem = (idCategory, idGroup) => ({type: actionTypes.get('addNewItem'), idCategory, idGroup});\r\nconst _updateGroup = (idCategory, idGroup, group) => ({type: actionTypes.get('updateGroup'), idCategory, idGroup, group});\r\nconst _updateGroupLocal = (idCategory, idGroup, idItem) => ({type: actionTypes.get('updateGroupLocal'), idCategory, idGroup, idItem});\r\nconst _renameGroup = (idCategory, idGroup, newName) => ({type: actionTypes.get('renameGroup'), idCategory, idGroup, newName});\r\n\r\n// Thunks\r\n\r\n/**\r\n * Установить id выбранной категории\r\n *\r\n * @param namePage - ID категории\r\n * @returns {Function}\r\n */\r\nexport const setCurrentPage = namePage => dispatch => {\r\n    dispatch(_setCurrentPage(namePage));\r\n};\r\n\r\n/**\r\n * Получить все категории\r\n * Грубо говоря, получает вообще все данные\r\n *\r\n * @returns {Function}\r\n */\r\nexport const getAllGroups = () => async dispatch => {\r\n    try {\r\n        const {data: {ok, categories}} = await appAPI.getAllGroups();\r\n        if (ok) {\r\n            const\r\n                _categories = categories.reduce((obj, category) => ({\r\n                    ...obj,\r\n                    [namesCategoryById.get(category.id)]: {\r\n                        id: category.id,\r\n                        name: category.name,\r\n                        groups: null,\r\n                    }\r\n                }), {});\r\n\r\n            await dispatch(_addAllCategory(_categories));\r\n            dispatch(_addAllCategoryLocal(_categories));\r\n\r\n            for (let category of categories) {\r\n                const\r\n                    objectGroup = makeObjectFromArray(category.groups);\r\n                dispatch(_addGroupsToCategory(\r\n                    category.id,\r\n                    objectGroup\r\n                ));\r\n                dispatch(_addGroupsToCategoryLocal(\r\n                    category.id,\r\n                    objectGroup\r\n                ));\r\n            }\r\n            dispatch(_setIsLoaded());\r\n        } else {\r\n            throw new Error('Ошибка в результате (ok = false)');\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка загрузки данных ]========');\r\n        console.info('Загрузка всех данных');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n/**\r\n * Получить определенную группу\r\n *\r\n * @param idCategory\r\n * @param idGroup\r\n * @returns {Function}\r\n */\r\nexport const getGroup = (idCategory, idGroup) => async dispatch => {\r\n    try {\r\n        const {data} = await appAPI.getGroup(idGroup);\r\n        if (data.ok) {\r\n           console.log(data);\r\n        } else {\r\n            throw new Error('Ошибка в результате (ok = false)');\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка загрузки данных ]========');\r\n        console.info('Загрузка группы');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n/**\r\n * Добавляет новую группу в категорию\r\n *\r\n * @param idCategory - ID выбранной категории\r\n * @param name - Название новой группы\r\n * @returns {Function}\r\n */\r\nexport const addNewGroup = (idCategory, name) => async dispatch => {\r\n    try {\r\n        const {data} = await appAPI.addNewGroup(idCategory, name);\r\n        if (data.ok) {\r\n            const {data} = await appAPI.getGroups(idCategory);\r\n            if (data.ok) {\r\n                const\r\n                    newCategory = {\r\n                        ...data.category,\r\n                        groups: makeObjectFromArray(data.category.groups)\r\n                    },\r\n                    newCategoryLocal = {\r\n                        ...data.category,\r\n                        groups: makeObjectFromArray(data.category.groups, true)\r\n                    };\r\n                dispatch(_changeCategory(newCategory));\r\n                dispatch(_changeCategoryLocal(newCategoryLocal));\r\n            } else {\r\n                throw new Error('Ошибка обновления группы');\r\n            }\r\n        } else {\r\n            throw new Error('Ошибка добавления');\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка добавления новой группы ]========');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n/**\r\n * Переименовать группу\r\n *\r\n * @param idCategory - ID Категории\r\n * @param idGroup - ID Группы\r\n * @param newName - Новое имя группы\r\n * @returns {Function}\r\n */\r\nexport const renameGroup = (idCategory, idGroup, newName) => async dispatch => {\r\n    try {\r\n        const {data: {ok}} = await appAPI.renameGroup(idGroup, newName);\r\n        if (ok) {\r\n            dispatch(_renameGroup(idCategory, idGroup, newName));\r\n        } else {\r\n            throw new Error('Ошибка при ренейме на сервере')\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка переименования группы ]========');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n/**\r\n * Удалить группу в категории\r\n *\r\n * @param idGroup - ID Группы\r\n * @param idCategory - ID Категории\r\n * @returns {Function}\r\n */\r\nexport const deleteGroup = (idCategory, idGroup) => async dispatch => {\r\n    try {\r\n        const {data} = await appAPI.deleteGroup(idGroup);\r\n        if (data.ok) {\r\n            const {data} = await appAPI.getGroups(idCategory);\r\n            if (data.ok) {\r\n                const\r\n                    newCategory = {\r\n                        ...data.category,\r\n                        groups: makeObjectFromArray(data.category.groups)\r\n                    },\r\n                    newCategoryLocal = {\r\n                        ...data.category,\r\n                        groups: makeObjectFromArray(data.category.groups, true)\r\n                    };\r\n                dispatch(_changeCategory(newCategory));\r\n                dispatch(_changeCategoryLocal(newCategoryLocal));\r\n            } else {\r\n                throw new Error('Ошибка обновления группы');\r\n            }\r\n        } else {\r\n            throw new Error('Ошибка удаления');\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка удаления группы ]========');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n/**\r\n * Доавить новый предмет\r\n * (добавляет только локально)\r\n * Для сохранения, нужно нажать \"Сохранить\"\r\n *\r\n * @param idCategory - ID Категории\r\n * @param idGroup - ID Группы\r\n * @returns {Function}\r\n */\r\nexport const addNewItem = (idCategory, idGroup) => dispatch => {\r\n    dispatch(_addNewItem(idCategory, idGroup));\r\n};\r\n\r\n/**\r\n * Создать/обновить на сервере\r\n *\r\n * @param item - Объект продукта\r\n * @param imageFile - Файл картинки\r\n * @param isNew - Новый ли файл\r\n * @param idCategory - ID Категории\r\n * @returns {Function}\r\n */\r\nexport const saveItem = (item, imageFile, isNew, idCategory) => async dispatch => {\r\n    try {\r\n        const {data} = await appAPI.saveItem(item, imageFile, isNew);\r\n        if (data.ok) {\r\n            if (isNew) {\r\n                const {data} = await appAPI.getGroup(item.groupId);\r\n                if (data.ok) {\r\n                    dispatch(_updateGroup(idCategory, item.groupId, data.group))\r\n                } else {\r\n                    throw new Error('Ошибка обновления группы');\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('Пришел не тот ответ');\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка создания/обновления товара ]========');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n/**\r\n * Удалить продукт\r\n *\r\n * @param idCategory\r\n * @param idGroup\r\n * @param idItem\r\n * @param isNew\r\n * @returns {Function}\r\n */\r\nexport const deleteItem = (idCategory, idGroup, idItem, isNew) => async dispatch => {\r\n    try {\r\n        if (isNew) {\r\n            dispatch(_updateGroupLocal(idCategory, idGroup, idItem));\r\n        } else {\r\n            const {data} = await appAPI.deleteItem(idItem);\r\n            if (data.ok) {\r\n                const {data} = await appAPI.getGroup(idGroup);\r\n                if (data.ok) {\r\n                    dispatch(_updateGroup(idCategory, idGroup, data.group));\r\n                } else {\r\n                    throw new Error('Ошибка обновления группы');\r\n                }\r\n            } else {\r\n                throw new Error('Пришел не тот ответ');\r\n            }\r\n        }\r\n    } catch(error) {\r\n        console.group('========[ Ошибка удаления товара ]========');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};","/**\r\n *\r\n * Редьюсер авторизации\r\n *\r\n */\r\nimport {authAPI} from \"@js/app/api/api\";\r\n\r\nconst\r\n    actionTypes = new Map([\r\n        ['auth', 'app/auth'],\r\n        ['initialized', 'app/initialized']\r\n    ]);\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    auth: false,\r\n    token: null\r\n};\r\n\r\n\r\n// Reducer\r\n\r\nconst authReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.get('initialized'):\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        case actionTypes.get('auth'):\r\n            return {\r\n                ...state,\r\n                auth: action.status,\r\n                token: action.token,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default authReducer;\r\n\r\n\r\n// Actions\r\nexport const _setAuth = (status, token) => ({type: actionTypes.get('auth'), status, token});\r\nexport const _initialized = () => ({type: actionTypes.get('initialized')});\r\n\r\n// Thunks\r\n\r\n/**\r\n * Проверка авторизации\r\n *\r\n * @returns {Function}\r\n */\r\nexport const getAuth = () => async dispatch => {\r\n    const myToken = localStorage.getItem('token');\r\n    if (myToken) {\r\n        try {\r\n            const res = await authAPI.getAuth(myToken);\r\n            if (res) {\r\n                dispatch(_setAuth(true, localStorage.getItem('token')));\r\n            }\r\n        } catch(error) {\r\n            console.group('=======[ Ошибка подтверждения авторизации ]=======');\r\n            console.error(error);\r\n            console.groupEnd();\r\n        }\r\n    }\r\n    dispatch(_initialized());\r\n};\r\n\r\n/**\r\n * Авторизация по логину и паролю с формы\r\n *\r\n * @param login\r\n * @param password\r\n * @returns {Function}\r\n */\r\nexport const login = (login, password) => async dispatch => {\r\n\r\n    try {\r\n        const {data} = await authAPI.login(login, password);\r\n\r\n        if (data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            dispatch(getAuth());\r\n        }\r\n        // TODO: Показать ошибку\r\n    } catch (error) {\r\n        console.group('========[ Ошибка авторизации ]========');\r\n        console.error(error);\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\n","/**\r\n *\r\n * Создание redux-store\r\n *\r\n *\r\n */\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n// Редьюсеры\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// Создание Store\r\nconst store = createStore(reducers, composeEnchancers(applyMiddleware(thunk)));\r\n\r\nexport default store;"],"sourceRoot":""}